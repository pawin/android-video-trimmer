plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdkVersion 32
    buildToolsVersion "31.0.0"

    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 32
        consumerProguardFiles "consumer-rules.pro"

        ndkVersion '22.1.7171674-pawin'
    }

    sourceSets {
        main {
            assets.srcDirs = ['assets']
            jni.srcDirs = [] //disable automatic ndk-build
            jniLibs.srcDirs = ['../path/to/libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.exoplayer:exoplayer:2.17.1'
    implementation 'com.arthenica:mobile-ffmpeg-min:4.4.LTS'
    implementation 'com.github.bumptech.glide:glide:4.13.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.1'
    implementation 'com.akexorcist:localization:1.2.9'
    implementation 'com.google.code.gson:gson:2.9.0'
}

repositories {
    mavenCentral()
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId "com.gowtham"
            artifactId "videotrimmer"
            version "22.1.7171674-pawin"
            artifact("$buildDir/outputs/aar/library-debug.aar")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/pawin/android-video-trimmer")
            credentials {
                def properties = new Properties()
                properties.load(new FileInputStream(rootProject.file("local.properties")))

                username = properties["gpr.user"] ?: System.getenv("USERNAME")
                password = properties["gpr.key"] ?: System.getenv("TOKEN")
            }
        }
    }
}